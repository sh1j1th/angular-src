<div class="container">
        <br>  
        <br>
        <br>
        <div class="card bg-light">
        <article class="card-body mx-auto" style="max-width: 400px;">
            <h4 class="card-title mt-3 text-center">Create Account</h4>
            <form #frm="ngForm"  [matchValue]= "['password', 'confirmpassword']">
            <div class="form-group input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"> <i class="fa fa-user"></i> </span>
                 </div>
                <input name="firstname" class="form-control" placeholder="First name" type="text" [(ngModel)]="studentsignupData.firstname" ngModel #firstname="ngModel" required pattern="[a-zA-Z][a-zA-Z]*">
            </div> <!-- form-group// -->
            <div *ngIf="firstname.invalid && (firstname.dirty || firstname.touched)" class="alert alert-danger">
                <p *ngIf="firstname.hasError('required')">
                    Name is required(characters with no space) !
                </p>
            </div>

            <div class="form-group input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"> <i class="fa fa-envelope"></i> </span>
                 </div>
                <input name="email" class="form-control" placeholder="Email address" type="email" [(ngModel)]="studentsignupData.email" ngModel #email="ngModel" required pattern="^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$">
            </div> <!-- form-group// -->
            <div *ngIf="email.invalid && (email.dirty || email.touched)" class="alert alert-danger">
                    <p *ngIf="email.hasError('required')">
                        Email is required !
                    </p>
                    <p *ngIf="email.hasError('pattern')">
                        Email is invalid !
                    </p>
            </div>

            <div class="form-group input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                </div>
                <input name="password" class="form-control" placeholder="Create password" type="password" [(ngModel)]="studentsignupData.password" ngModel #password="ngModel" required pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{4,8}$">
            </div> <!-- form-group// -->
            <div *ngIf="password.invalid && (password.dirty || password.touched)" class="alert alert-danger">
                    <p *ngIf="password.hasError('required')">
                        Password is required !
                    </p>
                    <p *ngIf="password.hasError('pattern')">
                         Password must be at least 4 characters, no more than 8 characters, and include at least one upper case, one lower case, and one digit.
                    </p>
            </div>

            <div class="form-group input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"> <i class="fa fa-lock"></i> </span>
                </div>
                <input name="confirmpassword" class="form-control" placeholder="Repeat password" type="password" [(ngModel)]="studentsignupData.confirmpassword" ngModel #confirmpassword="ngModel" required pattern="^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{4,8}$">            </div> <!-- form-group// --> 
                <div *ngIf="confirmpassword.invalid && (confirmpassword.dirty || confirmpassword.touched)" class="alert alert-danger">
                        <p *ngIf="confirmpassword.hasError('required')">
                            Password is required !
                        </p>
                        <p *ngIf="confirmpassword.errors?.matchValueError">
                                Confirm Password & Password must be same.
                        </p>
                </div>
            
            <div class="form-group">
                <button type="submit" name="button" class="btn btn-primary btn-block" [disabled]="frm.invalid" (click)="studentsignup()"> Create Account  </button>
            </div> <!-- form-group// -->      
            <p class="text-center">Have an account? <a href="studentlogin">Log In</a> </p>                                                                 
        </form>
        </article>
        </div> <!-- card.// -->
        <br>
        <br>
        </div> 




>>>>>>>>>>>>>>>>>>>>>>ts file<<<<<<<<<<<<<<<<<<<<<<<<
import { Component, OnInit } from '@angular/core';
import {studentsignup} from '../studentsignup';
import { StudentauthService } from '../studentauth.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-studentsignup',
  templateUrl: './studentsignup.component.html',
  styleUrls: ['./studentsignup.component.scss']
})
export class StudentsignupComponent implements OnInit {
  
  studentsignupData={}
  constructor(private _auth: StudentauthService, private _router: Router) { }

  ngOnInit() {
  }
  studentsignup(){
    this._auth.studentsignup(this.studentsignupData)
    .subscribe(
      res => {
        console.log(res);
        localStorage.setItem('token',res.token);
        this._router.navigate(['/studentlogin']);
      },  
      err => console.log(err )
    )
  }

}
